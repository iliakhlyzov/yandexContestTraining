const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

let notaCount = 0;
let sounds = [];
let counter = 0;

let leftLimit = 30;
let rightLimit = 4000.0;

const getRangeOfTriagle = (sounds) => {
  let prev = Number(sounds[0]);
  for (let i = 1; i < sounds.length; i += 1) {
    const [nota, type] = [Number(sounds[i][0]), sounds[i][1]];
    if (type === 'closer') {
      if (nota > prev) {
        const newLimit = prev + (nota - prev) / 2;
        if (newLimit > leftLimit) {
          leftLimit = newLimit;
        }
      } else {
        const newLimit = nota + (prev - nota) / 2;
        if (rightLimit > newLimit) {
          rightLimit = newLimit;
        }
      }
    } else {
      if (prev < nota) {
        const newLimit = prev + (nota - prev) / 2;
        if (rightLimit > newLimit) {
          rightLimit = newLimit;
        }
      } else {
        const newLimit = nota + (prev - nota) / 2;
        if (newLimit > leftLimit) {
          leftLimit = newLimit;
        }
      }
    }
    prev = nota;
  }
  return [
    Number.isInteger(leftLimit) ? leftLimit.toFixed(1) : leftLimit,
    Number.isInteger(rightLimit) ? rightLimit.toFixed(1) : rightLimit,
  ]
}

// rl.close();
rl.on('line', (string) => {
  if (counter === 0) {
    counter += 1;
    notaCount = Number(string);
  } else {
    counter += 1;
    sounds.push(string.split(' '));
  }
  if (counter === notaCount + 1) {
    rl.close();
    console.log(getRangeOfTriagle(sounds).join(' '));
  }
});

/*
J. Треугольник Максима

Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
С детства Максим был неплохим музыкантом и мастером на все руки. Недавно он самостоятельно сделал 
несложный перкуссионный музыкальный инструмент — треугольник. Ему нужно узнать, какова частота звука, издаваемого его инструментом.
У Максима есть профессиональный музыкальный тюнер, с помощью которого можно проигрывать ноту с заданной
частотой. Максим действует следующим образом: он включает на тюнере ноты с разными частотами и для каждой
ноты на слух определяет, ближе или дальше она к издаваемому треугольником звуку, чем предыдущая нота.
Поскольку слух у Максима абсолютный, он определяет это всегда абсолютно верно.
Вам Максим показал запись, в которой приведена последовательность частот, выставляемых им на тюнере, и про
каждую ноту, начиная со второй, записано — ближе или дальше она к звуку треугольника, чем предыдущая нота.
Заранее известно, что частота звучания треугольника Максима составляет не менее 30 герц и не более 4000 герц.
Требуется написать программу, которая определяет, в каком интервале может находиться частота звучания треугольника.
Формат ввода

Первая строка входного файла содержит целое число n — количество нот, которые воспроизводил Максим с помощью
тюнера (2 ≤ n ≤ 1000). Последующие n строк содержат записи Максима, причём каждая строка содержит две
компоненты: вещественное число fi — частоту, выставленную на тюнере, в герцах (30 ≤ fi ≤ 4000), и слово «closer»
или слово «further» для каждой частоты, кроме первой.
Слово «closer» означает, что частота данной ноты ближе к частоте звучания треугольника, чем частота предыдущей
ноты, что формально описывается соотношением: |fi − ftriangle| < |fi − 1 − ftriangle| .
Слово «further» означает, что частота данной ноты дальше, чем предыдущая.
Если оказалось, что очередная нота так же близка к звуку треугольника, как и предыдущая нота, то Максим мог
записать любое из двух указанных выше слов.
Гарантируется, что результаты, полученные Максимом, непротиворечивы.
Формат вывода

В выходной файл необходимо вывести через пробел два вещественных числа — наименьшее и наибольшее возможное
значение частоты звучания треугольника, изготовленного Максимом. Числа должны быть выведены с точностью не хуже 10−6.
*/
